---
name: Run updatecli and push to git
author: PrefectHQ
description: This action will run updatecli and push the changes to git and will also open a PR
inputs:
  manifest-path:
    description: "Path to the updatecli manifest file"
    default: ".github/updatecli/manifest-minor.yaml"
    required: true
  run-type:
    description: "The type of updatecli run to perform (major or minor)"
    default: "minor"
    required: true
runs:
  using: composite
  steps:
    - id: configure_git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      shell: bash

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      shell: bash

    - name: create branch for dependency version updates
      run: git checkout -b "dependency-version-${{ inputs.run-type }}-${{ steps.date.outputs.date }}"
      shell: bash

    - name: install updatecli in the runner
      uses: updatecli/updatecli-action@v2

    - name: run updatecli in apply mode
      id: updatecli_apply
      run: |
        updatecli apply --config .github/updatecli/manifest.yaml --experimental
        if [[ $(git diff --name-only | wc -l) -eq 0 ]]; then
          echo "No changes detected, exiting"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi
        touch text.txt
        git add .
        git commit -m "dependency-version-${{ inputs.run-type }}-${{ steps.date.outputs.date }}"
        git push --set-upstream origin "dependency-version-${{ inputs.run-type }}-${{ steps.date.outputs.date }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}
      shell: bash

    - name: create pr
      if: steps.updatecli_apply.outputs.changes == 'true'
      run: |
        git checkout "dependency-version-${{ inputs.run-type }}-${{ steps.date.outputs.date }}"
        gh pr create --base main --title "dependency-version-${{ inputs.run-type }}-bump-${{ steps.date.outputs.date }}" -f --label soc2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      shell: bash
